spring.application.name=order-service
spring.config.import=optional:configserver:http://localhost:8888
spring.profiles.active=dev

# Kafka broker
spring.kafka.bootstrap-servers=127.0.0.1:9092

# Consumer group
spring.kafka.consumer.group-id=order-service
# start from latest so we don't hit old bad records; use 'earliest' if you want history
spring.kafka.consumer.auto-offset-reset=latest

# Robust JSON deserialization (works with/without type headers)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.order_service.dto.OrderRequestDto

# Optional: don't fail app start if topic not present yet
spring.kafka.listener.missing-topics-fatal=false

# Topic name (must match producer exactly)
app.kafka.topic=Order-Created
